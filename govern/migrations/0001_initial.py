# Generated by Django 5.2 on 2025-04-19 14:14

import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GovernanceRole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('responsibilities', models.TextField()),
                ('lifecycle_stages', models.TextField(help_text='Lifecycle stages this role oversees.')),
                ('trustworthiness_focus', models.TextField(help_text='Which trustworthiness characteristics this role is responsible for.')),
            ],
        ),
        migrations.CreateModel(
            name='GovernanceStructure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('structure_type', models.CharField(choices=[('COMMITTEE', 'Governance Committee'), ('BOARD', 'Review Board'), ('WORKING_GROUP', 'Working Group'), ('TEAM', 'Dedicated Team')], max_length=50)),
                ('authority_level', models.CharField(choices=[('ADVISORY', 'Advisory'), ('APPROVAL', 'Approval Authority'), ('OVERSIGHT', 'Oversight'), ('EXECUTION', 'Execution')], max_length=50)),
                ('meeting_frequency', models.CharField(max_length=50)),
                ('charter', models.TextField(help_text="Structure's charter and operating procedures")),
                ('responsibilities', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='HumanAIOversight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('intervention_points', models.TextField()),
                ('oversight_mechanisms', models.TextField()),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('version', models.CharField(max_length=50)),
                ('effective_date', models.DateField(default=django.utils.timezone.now)),
                ('last_reviewed', models.DateField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('REVIEW', 'Under Review'), ('ACTIVE', 'Active'), ('RETIRED', 'Retired')], max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('applicability', models.TextField(help_text='Scope and applicability of the policy')),
                ('third_party_requirements', models.TextField(help_text='Requirements for third-party components and services')),
                ('review_process', models.TextField(help_text='Policy review and update process')),
                ('exceptions_process', models.TextField(help_text='Process for handling policy exceptions')),
                ('compliance_requirements', models.TextField(help_text='Compliance and reporting requirements')),
                ('lifecycle_integration', models.TextField(help_text='Integration with AI lifecycle stages')),
                ('trustworthiness_requirements', models.TextField(help_text='Trustworthiness requirements addressed by the policy')),
            ],
            options={
                'verbose_name_plural': 'Policies',
            },
        ),
        migrations.CreateModel(
            name='RiskAppetite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk')], max_length=50)),
                ('description', models.TextField()),
                ('criteria', models.TextField()),
                ('approved_date', models.DateField()),
                ('review_frequency', models.IntegerField(help_text='Review frequency in months')),
                ('third_party_considerations', models.TextField(help_text='Risk appetite considerations for third-party components')),
                ('review_triggers', models.TextField(help_text='Events triggering risk appetite review')),
                ('sector_specific_factors', models.TextField(help_text='Sector-specific risk considerations')),
                ('mitigation_requirements', models.TextField(help_text='Required risk mitigation measures')),
            ],
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('responsibilities', models.TextField()),
                ('oversight_areas', models.TextField(help_text='Areas of oversight responsibility')),
                ('third_party_oversight', models.TextField(help_text='Third-party oversight responsibilities')),
                ('escalation_path', models.TextField(help_text='Risk and issue escalation path')),
                ('required_qualifications', models.TextField(help_text='Required qualifications and expertise')),
                ('delegation_authority', models.TextField(help_text='Authority delegation rules')),
                ('lifecycle_stages', models.TextField(help_text='Lifecycle stages this role oversees.')),
                ('trustworthiness_focus', models.TextField(help_text='Which trustworthiness characteristics this role is responsible for.')),
            ],
        ),
        migrations.CreateModel(
            name='ThirdPartyOversight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('third_party_type', models.CharField(choices=[('SOFTWARE', 'Software Provider'), ('HARDWARE', 'Hardware Provider'), ('DATA', 'Data Provider'), ('SERVICE', 'Service Provider'), ('CONSULTANT', 'Consultant')], max_length=50)),
                ('risk_level', models.CharField(choices=[('LOW', 'Low Risk'), ('MEDIUM', 'Medium Risk'), ('HIGH', 'High Risk'), ('CRITICAL', 'Critical Risk')], max_length=50)),
                ('assessment_frequency', models.CharField(max_length=50)),
                ('compliance_requirements', models.TextField()),
                ('monitoring_approach', models.TextField()),
                ('incident_protocol', models.TextField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='ThirdPartyRisk',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('third_party_name', models.CharField(max_length=200)),
                ('component_type', models.CharField(choices=[('SOFTWARE', 'Software'), ('HARDWARE', 'Hardware'), ('DATA', 'Data'), ('SERVICE', 'Service'), ('MODEL', 'Pre-trained Model')], max_length=50)),
                ('risk_description', models.TextField()),
                ('mitigation_measures', models.TextField()),
                ('monitoring_plan', models.TextField()),
                ('last_reviewed', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
    ]
